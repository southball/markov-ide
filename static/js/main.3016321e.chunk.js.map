{"version":3,"sources":["Markov.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["MarkovRule","isTerminating","left","right","this","state","indexOf","replace","line","match","TERMINATING_RULE","NONTERMINATING_RULE","Error","Markov","rules","initialState","terminated","lines","map","parse","filter","rule","apply","applied","newState","LogDisplay","log","ref","useRef","useEffect","console","current","scrollTop","style","height","overflowY","fontFamily","border","margin","logLine","index","whiteSpace","wordBreak","reducer","action","markov","runInterval","error","notRunning","undefined","running","type","clearInterval","step","moved","newMarkov","includes","length","reset","parseRules","err","message","setInitialState","interval","App","useState","editorContent","setEditorContent","speed","setSpeed","useReducer","dispatch","split","className","Container","fluid","padding","href","Row","marginBottom","Col","FormControl","placeholder","value","onChange","event","target","ButtonGroup","Button","disabled","onClick","setInterval","runOrPause","variant","toFixed","Form","Control","min","max","fontSize","width","mode","theme","newContent","Alert","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3016321e.chunk.js","sourcesContent":["export class MarkovRule {\n    public isTerminating: boolean;\n    public left: string;\n    public right: string;\n\n    private static TERMINATING_RULE = /^([^:]*)::([^:]*)$/;\n    private static NONTERMINATING_RULE = /^([^:]*):([^:]*)$/;\n\n    public constructor(isTerminating: boolean, left: string, right: string) {\n        this.isTerminating = isTerminating;\n        this.left = left;\n        this.right = right;\n    }\n\n    public static parse(line: string): MarkovRule | null {\n        if (line.indexOf(':') === -1) {\n            return null;\n        }\n\n        let match;\n\n        if ((match = line.match(MarkovRule.TERMINATING_RULE)) != null) {\n            let [, left, right] = match;\n            return new MarkovRule(true, left, right);\n        } else if ((match = line.match(MarkovRule.NONTERMINATING_RULE)) != null) {\n            let [, left, right] = match;\n            return new MarkovRule(false, left, right);\n        } else {\n            throw new Error(\"Syntax error in line \" + line);\n        }\n    }\n\n    public apply(state: string): [boolean, string] {\n        if (this.left === \"\") {\n            return [true, this.right + state];\n        } else if (state.indexOf(this.left) !== -1) {\n            return [true, state.replace(this.left, this.right)];\n        } else {\n            return [false, state];\n        }\n    }\n}\n\nexport class Markov {\n    public rules: MarkovRule[];\n    public initialState: string;\n    public state: string;\n    public terminated: boolean;\n\n    public constructor(\n        rules: MarkovRule[] = [],\n        initialState: string = '',\n        state: string = '',\n        terminated: boolean = false\n    ) {\n        this.rules = rules;\n        this.initialState = initialState;\n        this.state = state;\n        this.terminated = terminated;\n    }\n\n    public parseRules(lines: string[]): Markov {\n        return new Markov(\n            lines.map(MarkovRule.parse)\n                .filter((rule) => rule !== null) as MarkovRule[],\n            this.initialState,\n            this.state,\n            this.terminated,\n        );\n    }\n\n    public setInitialState(initialState: string): Markov {\n        return new Markov(\n            this.rules,\n            initialState,\n            initialState,\n            this.terminated,\n        );\n    }\n\n    public reset(): Markov {\n        return new Markov(\n            this.rules,\n            this.initialState,\n            this.initialState,\n            false\n        );\n    }\n\n    public step(): [boolean, Markov] {\n        if (this.terminated)\n            return [false, this];\n\n        for (const rule of this.rules) {\n            const [applied, newState] = rule.apply(this.state);\n            if (applied) {\n                return [true, new Markov(\n                    this.rules,\n                    this.initialState,\n                    newState,\n                    rule.isTerminating,\n                )];\n            }\n        }\n\n        return [false, new Markov(\n            this.rules,\n            this.initialState,\n            this.state,\n            true,\n        )];\n    }\n}","import * as React from 'react';\nimport { useState, useEffect, useRef, useReducer } from 'react';\nimport { MarkovRule, Markov } from './Markov';\nimport AceEditor from 'react-ace';\nimport { Alert, Button, ButtonGroup, Col, Form, FormControl, Container, Row } from 'react-bootstrap';\n\nimport 'ace-builds/src-noconflict/mode-text';\nimport 'ace-builds/src-noconflict/theme-github';\n\nfunction LogDisplay({ log }: { log: string[] }) {\n  const ref = useRef<any>();\n\n  useEffect(() => {\n    console.log(ref.current, ref.current.scrollTop);\n    if (typeof ref.current.scrollTop !== 'undefined')\n      ref.current.scrollTop = 1e9;\n  }, [log])\n\n  return (\n    <div ref={ref} style={{ height: \"500px\", overflowY: \"auto\", fontFamily: \"Consolas\", border: \"1px solid #000\" }}>\n      <div style={{ margin: \"1rem\" }}>\n        {log.map((logLine, index) => (\n          <div style={{ whiteSpace: \"pre-wrap\", wordBreak: \"break-all\" }}>{index}: {logLine}</div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\ninterface State {\n  markov: Markov;\n  log: string[];\n  runInterval?: any;\n  error: string;\n  running: boolean;\n}\n\nconst reducer = (state: State, action: { type: string, [key: string]: any }) => {\n  const { markov, runInterval, error, log } = state;\n  const notRunning = {\n    runInterval: undefined,\n    running: false,\n  };\n\n  switch (action.type) {\n    case 'step':\n      if (markov.terminated) {\n        clearInterval(runInterval);\n        return { ...state, ...notRunning, runInterval: undefined };\n      }\n\n      const [moved, newMarkov] = markov.step();\n\n      if (moved && !markov.terminated && log.includes(newMarkov.state)) {\n        clearInterval(runInterval);\n        return {\n          ...state,\n          ...notRunning,\n          markov: newMarkov,\n          log: [...log, newMarkov.state],\n          error: `Repeating state ${newMarkov.state} on step ${log.length}, previous occurred on step ${log.indexOf(newMarkov.state)}`,\n        };\n      }\n\n      if (moved)\n        return { ...state, markov: newMarkov, log: [...log, newMarkov.state] };\n      else {\n        clearInterval(runInterval);\n        return { ...state, ...notRunning, markov: newMarkov, log: [...log] };\n      }\n    case 'pause':\n      clearInterval(runInterval);\n      return { ...state, running: false };\n    case 'reset':\n      clearInterval(runInterval);\n      return { ...state, ...notRunning, markov: markov.reset(), log: [markov.initialState], error: '' };\n    case 'setRules':\n      clearInterval(runInterval);\n      try {\n        const newMarkov = markov.parseRules(action.rules);\n        return { ...state, ...notRunning, markov: newMarkov, error: '' };\n      } catch (err) {\n        return { ...state, ...notRunning, markov, error: err.message };\n      }\n    case 'setInitialState':\n      clearInterval(runInterval);\n      return { ...state, ...notRunning, markov: markov.setInitialState(action.initialState), log: [action.initialState], error: '' };\n    case 'setInterval':\n      return { ...state, markov, log, runInterval: action.interval, running: true };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [editorContent, setEditorContent] = useState('');\n  const [speed, setSpeed] = useState<number>(5);\n\n  const [{ markov, error, log, running, runInterval }, dispatch] = useReducer(\n    reducer,\n    {\n      markov: new Markov(),\n      log: [],\n      runInterval: undefined,\n      error: '',\n      running: false,\n    } as State);\n\n  useEffect(() => {\n    dispatch({ type: 'setRules', rules: editorContent.split('\\n') });\n  }, [editorContent]);\n\n  useEffect(() => {\n    dispatch({ type: 'reset' });\n  }, [markov.initialState]);\n\n  const runOrPause = () => {\n    // Already running\n    if (runInterval && running) {\n      dispatch({ type: 'pause' });\n      return;\n    }\n\n    const interval = setInterval(() => {\n      dispatch({ type: 'step' });\n    }, 500 / speed);\n\n    dispatch({ type: 'setInterval', interval });\n  };\n\n  return (\n    <div className=\"App\">\n      <Container fluid style={{ padding: \"2rem\" }}>\n        <h1>Markov IDE</h1>\n        <h5>Challenge yourself at <a href=\"https://mao.snuke.org\">Markov Algorithm Online</a> by <a href=\"https://twitter.com/snuke_/\">@snuke_</a>!</h5>\n        <hr />\n\n        <Row style={{ marginBottom: \"1rem\" }}>\n          <Col>\n            <FormControl placeholder=\"State\" value={markov.state} onChange={(event) => dispatch({ type: 'setInitialState', initialState: event.target.value })} />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: \"1rem\" }}>\n          <Col>\n            <h3>Control</h3>\n            <ButtonGroup>\n              <Button disabled={markov.terminated} onClick={() => runOrPause()}>\n                {!running ? \"Run\" : \"Pause\"}\n              </Button>\n              <Button disabled={running || markov.terminated} onClick={() => dispatch({ type: 'step' })}>Step</Button>\n              <Button onClick={() => dispatch({ type: 'reset' })}>Reset</Button>\n              <Button variant=\"outline-secondary\">Terminated: {markov.terminated ? \"Yes\" : \"No\"}</Button>\n            </ButtonGroup>\n          </Col>\n\n          <Col>\n            <h3>Speed (500 ms/step ~ 20 ms/step)</h3>\n            Current speed: {(500 / speed).toFixed()} ms/step\n            <Form.Control disabled={running} type=\"range\" min={1} max={25} value={speed} onChange={(event) => setSpeed(+event.target.value)} />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: \"1rem\" }}>\n          <Col>\n            <h3>Algorithm</h3>\n            <div style={{ border: '1px solid #000;' }}>\n              <AceEditor\n                fontSize={14}\n                width=\"auto\"\n                height=\"500px\"\n                mode=\"text\"\n                theme=\"github\"\n                value={editorContent}\n                onChange={(newContent) => setEditorContent(newContent)}\n              />\n            </div>\n          </Col>\n\n          <Col>\n            <h3>Log</h3>\n            {error && <Alert variant=\"danger\" style={{ whiteSpace: \"pre-wrap\", wordBreak: \"break-word\" }}>{error}</Alert>}\n            <LogDisplay log={log} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}